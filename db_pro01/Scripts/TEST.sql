SELECT * FROM EMPLOYEES

/*
 *  직원의 급여를 인상하고자 한다
 * 직급코드가 J7인 직원은 급여의 8%를 인상하고,
 * 직급코드가 J6인 직원은 급여의 7%를 인상하고,
 * 직급코드가 J5인 직원은 급여의 5%를 인상한다.
 * 그 외 직급의 직원은 3%만 인상한다.
 * 직원 테이블(EMP)에서 직원명(EMPNAME), 직급코드(JOBCODE), 급여(SALARY), 인상급여(위 조건)을
 * 조회하세요(단, DECODE를 이용해서 출력하시오.) (20점)
 */


SELECT EMPNAME AS 직원명
	 , JOBCODE AS 직급코드
	 , SALARY AS 급여
	 , DECOD(JOBCODE, 'J7', SALARY * 1.08, 'J6', SALARY * 1.07, 'J5', SALARY * 1.05, SALARY * 1.03) AS 인상급여
  FROM EMP;

SELECT FIRST_NAME 
	 , JOB_ID
	 , SALARY
	 , DECODE(JOB_ID, 'J7', SALARY * 1.1, 'J6',
       SALARY * 1.15, 'J5', SALARY * 1.2, SALARY * 1.05) 인상급여
FROM EMPLOYEES;



/*
 * 아래의 SQL구문은 부서 별 평균 월급이 2,800,000을 초과하는 부서를 조회한 것이다.
 * 결과가 올바르지 않다고 할 때, 그 원인(20점)과 올바르게 수정한 조치사항(20점)을 각각 항목에 맞게 기술하시오. (총 40점)
 */ 

SELECT DEPT
	 , SUM(SALARY) 합계
	 , FLOOR(AVG(SALARY)) 평균
	 , COUNT(*) 인원수
  FROM EMP
 WHERE SALARY > 2800000
 GROUP BY DEPT
 ORDER BY DEPT ASC;
 
SELECT DEPARTMENT_ID
	 , SUM(SALARY) 합계
	 , FLOOR(AVG(SALARY)) 평균
  FROM EMPLOYEES
 GROUP BY DEPARTMENT_ID
 ORDER BY DEPARTMENT_ID ASC;

SELECT DEPARTMENT_ID
	 , SUM(SALARY) 합계
	 , FLOOR(AVG(SALARY)) 평균
	 , COUNT(*) 인원수
  FROM EMPLOYEES
 WHERE SALARY > 2800
 GROUP BY DEPARTMENT_ID
 ORDER BY DEPARTMENT_ID ASC;


SELECT DEPARTMENT_ID
	 , SUM(SALARY) 합계
	 , FLOOR(AVG(SALARY)) 평균
	 , COUNT(*) 인원수
  FROM EMPLOYEES
 GROUP BY DEPARTMENT_ID
HAVING FLOOR(AVG(SALARY)) > 2800
 ORDER BY DEPARTMENT_ID ASC;


GROUP BY로 묶인그룹에 조건을 추가하기위해 HAVING절에 조건이 추가되어야 한다.

평균 급여이기 때문에 조건문에 SALARY만 들어가면 안된다
그룹과 관련된 조건이기 때문에 WHERE절이 아니라 HAVING절을 사용해야 한다
요구된 구문에 필요한 조건을 정확하게 기술함


SELECT DEPT
	 , SUM(SALARY) 합계
	 , FLOOR(AVG(SALARY)) 평균
	 , COUNT(*) 인원수
  FROM EMP
 GROUP BY DEPT
HAVING FLOOR(AVG(SALARY)) > 2800000
 ORDER BY DEPT ASC;



SELECT 1234
     , TO_CHAR(1234)
     , TO_CHAR(SYSDATE, 'YYYYMMDD')
     , TO_CHAR(SYSDATE, 'YYYY/MM/DD')
     , TO_CHAR(SYSDATE, 'YYYY-MM-DD')
     , TO_CHAR(SYSDATE, 'YYYY"년" MM"월" DD"일"')
     , TO_CHAR(SYSDATE, 'YYYY-MM-DD AM HH:MI:SS')
     , TO_CHAR(SYSDATE, 'YYYY-MM-DD HH24:MI:SS')
     , TO_CHAR(SYSTIMESTAMP, 'YYYY-MM-DD AM HH:MI:SS.FF3')
     , TO_CHAR(1000000, '999,999,999')
     , TO_CHAR(1000000, '000,000,000')
     , TO_CHAR(1000000, '999,999,999L')
  FROM DUAL;


SELECT TO_DATE('20220425', 'YYYYMMDD')
     , TO_DATE('20220425')
     , TO_DATE(20220425)
     , TO_DATE('2022/04/25')
     , TO_DATE('2022-04-25')
     , TO_DATE('2022.04.25')
     , TO_DATE('2022년 04월 25일', 'YYYY"년" MM"월" DD"일"')
  FROM DUAL;

SELECT TO_DATE('210505', 'YYYY"년" MM"월" DD"일"') FROM DUAL;

SELECT TO_CHAR(TO_DATE(210505), 'YYYY"년" MM"월" DD"일"')FROM DUAL;

SELECT TO_CHAR(SYSDATE, 'YYYY"년" MM"월" DD"일"')FROM DUAL;


SELECT * FROM EMPLOYEES 
WHERE JOB_ID='SA_MAN' OR JOB_ID = 'SA_REP'

WHERE COMMISSION_PCT IS NULL 
AND MANAGER_ID IS NOT NULL;


검색조건
DEPT_CODE가 D9이거나 D6이고 SALARY이 300만원 이상이고 BONUS가 있고
남자이고 이메일주소가 _ 앞에 3글자 있는
사원의 EMP_NAME, EMP_NO, DEPT_CODE, SALARY를 조회

SELECT FIRST_NAME, EMPLOYEE_ID, JOB_ID, SALARY, EMAIL, COMMISSION_PCT
FROM EMPLOYEES
WHERE JOB_ID='SA_MAN' OR JOB_ID = 'SA_REP'
AND SALARY > 9600
--AND EMAIL LIKE '__I%'
AND COMMISSION_PCT IS NOT NULL;


SELECT EMP_NAME, EMP_NO, DEPT_CODE, SALARY
FROM EMPLOYEES
WHERE DEPT_CODE='D9' OR DEPT_CODE='D6' AND SALARY > 3000000
AND EMAIL LIKE '____%' AND COMMISSION_PCT IS NULL;





CREATE TABLE memberTB (
	   id	varchar2(10)
	 , pass	varchar2(20)
	 , name	varchar2(10)
	 , age	number
);
INSERT INTO memberTB VALUES (0100, '1234', '이지은', 25);
INSERT INTO memberTB VALUES ('0101', 'C33kimleechoi', '강한나', 30);
INSERT INTO memberTB VALUES ('0102', 'snsd', '서주현', 28);



SELECT * FROM memberTB;






);

CREATE TABLE DEPARTMENT2(
    DEPTCODE NUMBER PRIMARY KEY,
    DEPTNAME NVARCHAR2(10) NOT NULL
);

CREATE TABLE EMPLOYEE2(
    EMPNO NUMBER PRIMARY KEY,
    EMPNAME VARCHAR2(10) NOT NULL,
    DEPTNO NUMBER REFERENCES DEPARTMENT2(DEPTCODE)
);


SELECT EMPNO, EMPNAME, DEPTNO, DEPTNAME
FROM EMPLOYEE2
JOIN DEPARTMENT2 USING(DEPTNO);

ALTER TABLE DEPARTMENT2 ADD DEPTNO NUMBER NOT NULL;

DROP TABLE EMPLOYEE2;
DROP TABLE DEPARTMENT2;
CREATE TABLE DEPARTMENT2(
    DEPTNO NUMBER PRIMARY KEY,
    DEPTNAME NVARCHAR2(10) NOT NULL
);

CREATE TABLE EMPLOYEE2(
    EMPNO NUMBER PRIMARY KEY,
    EMPNAME VARCHAR2(10) NOT NULL,
    DEPTNO NUMBER REFERENCES DEPARTMENT2(DEPTCODE)
);